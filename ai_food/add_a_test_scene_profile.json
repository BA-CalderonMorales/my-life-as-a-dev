{
  "version": "1.6",
  "defaults": {
    "initialPrototype": {
      "format": "self-contained-html",
      "description": "On first scaffold, output a complete single-file HTML prototype so I can review immediately.",
      "outputAsFiles": true
    },
    "omitBoilerplatePrompt": true,
    "outputMode": "downloadableFiles",
    "awaitFeedbackBeforeNextSteps": true,
    "strictAvoidHallucinations": true,
    "baselinePrototypeSource": "improved-scene.html"
  },
  "interaction": {
    "nameSelection": {
      "promptChoice": "Would you like to choose a scene name and filename? (yes/no)",
      "ifYes": "askForComponentName",
      "ifNo": "useDefaultNamePrototype"
    }
  },
  "projectLayout": {
    "sceneDir": "docs/blog/life/test_scenes/",
    "jsComponentsDir": "assets/js/components/{componentName}/",
    "cssComponentsDir": "assets/css/components/{componentName}/",
    "configPath": "mkdocs.yml"
  },
  "sceneTemplate": {
    "fileName": "{componentName}.md",
    "titleLine": "# {sceneTitle}",
    "separator": "----",
    "htmlTag": "<{componentName} class=\"test-scene-container\"></{componentName}>",
    "importmap": {
      "enabled": true,
      "entries": {
        "three": "https://cdn.jsdelivr.net/npm/three@0.176.0/build/three.module.js",
        "three/addons/OrbitControls.js": "https://cdn.jsdelivr.net/npm/three@0.176.0/examples/jsm/controls/OrbitControls.js",
        "{componentName}": "/assets/js/components/{componentName}/{componentName}.js"
      }
    },
    "preLoadScript": {
      "enabled": true,
      "consoleLog": "console.log('Loading {componentName}…');",
      "debugFlag": "window.DEBUG_{COMPONENT_UPPER} = true;"
    }
  },
  "componentTemplate": {
    "fileName": "{componentName}.js",
    "className": "{ComponentClass}",
    "imports": [
      "import * as THREE from 'three';",
      "import { OrbitControls } from 'three/addons/OrbitControls.js';"
    ],
    "useShadowDOM": true,
    "skeleton": {
      "constructor": [
        "const shadow = this.attachShadow({ mode: 'open' });",
        "shadow.innerHTML = `<canvas></canvas><style>canvas { display:block; width:100%; height:100%; }</style>`;",
        "this.canvas = shadow.querySelector('canvas');"
      ],
      "connectedCallback": [
        "this._initThree();",
        "window.addEventListener('resize', () => this._onResize());",
        "this._onResize();",
        "this._animate();"
      ],
      "methods": {
        "_initThree": [
          "this.renderer = new THREE.WebGLRenderer({ canvas: this.canvas, antialias: true });",
          "this.scene = new THREE.Scene();",
          "this.camera = new THREE.PerspectiveCamera(75, this.canvas.clientWidth/this.canvas.clientHeight, 0.1, 100);",
          "this.camera.position.z = 3;",
          "this.controls = new OrbitControls(this.camera, this.renderer.domElement);",
          "this.controls.enableDamping = true;"
        ],
        "_onResize": [
          "const width = this.canvas.clientWidth, height = this.canvas.clientHeight;",
          "this.renderer.setSize(width, height, false);",
          "this.camera.aspect = width/height;",
          "this.camera.updateProjectionMatrix();"
        ],
        "_animate": [
          "requestAnimationFrame(() => this._animate());",
          "this.controls.update();",
          "this.renderer.render(this.scene, this.camera);"
        ]
      }
    },
    "register": "customElements.define('{componentName}', {ComponentClass});",
    "export": "export default {ComponentClass};"
  },
  "cssTemplate": {
    "fileName": "{componentName}.css",
    "importShared": "@import url('./test-scene-shared.css');",
    "hostSelector": "{componentName} { display:block; width:100%; height:100vh; position:relative; overflow:hidden; }",
    "containerSelector": ".{componentName}-container { /* custom styles */ }"
  },
  "mkdocsPatch": {
    "cssEntry": "assets/css/components/{componentName}/{componentName}.css",
    "jsEntry": "{ \"path\": \"assets/js/components/{componentName}/{componentName}.js\", \"type\": \"module\" }"
  },
  "debugSettings": {
    "flagVariable": "window.DEBUG_{COMPONENT_UPPER}",
    "logMessage": "console.log('Loading {componentName}…');",
    "sharedStyles": ["test-scene-shared.css"]
  },
  "scaffoldCommand": {
    "triggers": ["new scene", "begin"],
    "initialAction": ["nameSelection", "generateSelfContainedHtml"],
    "autoInitialOutput": "self-contained-html",
    "awaitFeedbackBeforeNextSteps": true,
    "steps": [
      "Create docs/blog/life/test_scenes/{componentName}.md",
      "Create assets/js/components/{componentName}/{componentName}.js",
      "Create assets/css/components/{componentName}/{componentName}.css",
      "Patch mkdocs.yml: add CSS and JS entries"
    ]
  }
}