name: Deploy MkDocs to GitHub Pages

on:

  push:
    branches:
      - main

  workflow_dispatch:

permissions:
  contents: write  # Needed for mike to commit to gh-pages branch
  pages: write
  id-token: write

# Allow only one concurrent deployment
concurrency:
  group: pages
  cancel-in-progress: true

jobs:

  # Job # 1: Build MkDocs site with versioning
  build:

    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          # Fetch complete history for proper versioning
          fetch-depth: 0

          # help with speed up of docs builds: https://x.com/squidfunk/status/1705279829770150291
          sparse-checkout: |
            docs
            mkdocs_plugins
            mkdocs.yml
            setup.py
            requirements.txt
            
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'
          cache: pip

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

          # Install local plugin in development mode
          pip install -e .

      - name: Configure Git for Mike
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"

      - name: Get latest version tag
        id: get-latest-tag
        run: |
          # Get the latest tag or use "latest" if no tags exist
          LATEST_TAG=$(git describe --tags --abbrev=0 2>/dev/null || echo "0.1.0")
          echo "LATEST_TAG=$LATEST_TAG" >> $GITHUB_ENV
          echo "Latest tag: $LATEST_TAG"

      - name: Create versions file
        run: |
          # Create a new gh-pages branch or use the existing one
          if ! git ls-remote --heads origin gh-pages | grep -q refs/heads/gh-pages; then
            git checkout --orphan gh-pages
            git reset --hard
            git commit --allow-empty -m "Initial gh-pages commit"
            git push origin gh-pages
          fi
          
          # Checkout gh-pages branch
          git fetch origin gh-pages:gh-pages || true
          git checkout gh-pages

          # Create versions.json at the root with appropriate content
          echo '[{"version":"'$LATEST_TAG'","title":"'$LATEST_TAG'","aliases":["latest"]}]' > versions.json
          
          # Commit and push the versions.json file
          git add versions.json
          git commit -m "Update versions.json for version $LATEST_TAG" || echo "No changes to commit"
          git push origin gh-pages
          
          # Return to previous branch
          git checkout -

      - name: Build and deploy with Mike
        run: |
          # Explicitly verify plugin module is available
          python -c "import sys; import mkdocs_plugins; print(f'Plugin module found at: {mkdocs_plugins.__file__}')"
          
          # Set PYTHONPATH to include the local plugins
          export PYTHONPATH=$PYTHONPATH:$(pwd)
          
          # Debug directory structure
          echo "Current directory structure:"
          find . -type d -name "mkdocs_plugins" | xargs ls -la
          
          # Deploy the latest version with Mike
          mike deploy --push --update-aliases $LATEST_TAG latest
          
          # Set the default alias to latest
          mike set-default --push latest
          
          # Build the site for GitHub Pages deployment
          mkdocs build

      - name: Copy versions.json to site directory
        run: |
          # Ensure versions.json exists in the root of the site
          git checkout gh-pages -- versions.json
          cp versions.json site/
          
          # Verify the file was copied
          ls -la site/
          cat site/versions.json

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./site

  # Job # 2: Deploy to GitHub Pages
  deploy:

    needs: build

    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    runs-on: ubuntu-latest

    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4